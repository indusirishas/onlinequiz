

----------------------------------------------------------------------
case 4: System.out.println("Enter the program name to be deleted"); 
Scanner scanner6 = new Scanner(System.in);
String programName1 = null;
Integer result = 0;
do
{
	programName1 = scanner6.next();
	valid = Validation.isValidProgramName(programName1);
	if(valid)
		result = service.deleteProgramsOffered(programName1);
	else
		System.err.println("Please enter valid Program Name");
}while(valid!=true);
if(result==1)
{
	System.out.println(programName1 +"in Programs Offered is deleted successfully");
}

-------------------------------------------------------
public Integer deleteProgramsOffered(String programName1) throws UASException {
		Connection connection = null;
		PreparedStatement preparedStatement = null;
		int result = 0;
		try
		{
			connection = DBUtil.getConnection();
			preparedStatement = connection
					.prepareStatement(IQueryMapper.QUERY19);
			preparedStatement.setString(1, programName1);
			result = preparedStatement.executeUpdate();
		}
		catch(Exception e)
		{
			throw new UASException(IExceptionMessages.MESSAGE4);
		}
		return result;
	}
	
------------------------------------------------------------------------------------


String QUERY19 = "DELETE FROM programs_offered where program_name = ?";


---------------------------------------------------------------------------------

ArrayList<ProgramsOffered> viewAllPrograms()
ArrayList<ProgramsScheduled> viewScheduledPrograms()
Integer applicantDetails(Application application) 
boolean adminLogin(String userName, String password, String role)
ArrayList<Application> filterApplicantsByProgramName(String progName)
Application applicantStatus(Integer id)
Integer updateStatus(Integer applicantId, Integer marksObtained)
Integer addParticipants(Application application)
 Integer deletePrograms()
Integer insertProgram(ProgramsScheduled programsScheduled)
ArrayList<Participants> retrieveParticipants()
Integer removeProgramsScheduled(String scheduledId)
---------------

public Integer addProgramsOffered(ProgramsOffered programsOffered) throws UASException {
		Connection connection = null;
		PreparedStatement preparedStatement = null;
		int result = 0;
		try
		{
			connection = DBUtil.getConnection();
			preparedStatement = connection
					.prepareStatement(IQueryMapper.QUERY18);
			preparedStatement.setString(1, programsOffered.getProgramName());
			preparedStatement.setString(2, programsOffered.getProgramDescription());
			preparedStatement.setString(3, programsOffered.getApplicantEligibility());
			preparedStatement.setInt(4, programsOffered.getProgramDuration());
			preparedStatement.setString(5, programsOffered.getDegreeCertOffered());
			result = preparedStatement.executeUpdate();
		}
		catch(Exception e)
		{
			throw new UASException(IExceptionMessages.MESSAGE4);
		}
		return result;
	}
